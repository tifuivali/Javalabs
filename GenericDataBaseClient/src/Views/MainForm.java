package Views;

import Graph.GraphBuilder;
import Models.MetadataTableModel;
import Models.QueryTableModel;
import QueryOptions.EmptyListException;
import QueryOptions.QueryHistory;
import genericdatabaseclient.DataBaseConection;
import ReportData.ReportQueryData;
import com.mxgraph.swing.mxGraphComponent;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tifuivali
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    private DataBaseConection dataBaseConection=null;
    private QueryHistory queryHistory=null;
    private mxGraphComponent graphComponent=null;
    public MainForm() {
        initComponents();
        tabbed_pane_tabs.setUI(new CustomTabbedPaneUI());
        this.queryHistory=QueryHistory.deserialize("querylist.ser");
        if(null==queryHistory)
            queryHistory=new QueryHistory();
        this.progress_report.setVisible(false);
        init();
        
    }
    
    
    private void init()
    {
        radio_UserSchema.setSelected(true);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent windowEvent) {
            try {
                queryHistory.serialize("querylist.ser");
                dataBaseConection.closeConnection();
            } catch (NullPointerException|SQLException ex) {
                System.out.println("Not closed!");
            }
            }
        });
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_query = new javax.swing.JTextArea();
        Button_submit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        button_report = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        text_name_report = new javax.swing.JTextField();
        progress_report = new javax.swing.JProgressBar();
        buttonIOpen = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        buttonGetMetadata = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        button_ViewGraph = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        radio_UserSchema = new javax.swing.JRadioButton();
        radio_allSchema = new javax.swing.JRadioButton();
        tabbed_pane_tabs = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setDividerSize(4);

        jPanel1.setBackground(new java.awt.Color(97, 155, 109));

        jLabel1.setFont(new java.awt.Font("Ubuntu Condensed", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(2, 26, 45));
        jLabel1.setText("Qury Tool");

        jLabel2.setText("Insert Query:");

        text_query.setBackground(new java.awt.Color(143, 211, 154));
        text_query.setColumns(20);
        text_query.setRows(5);
        text_query.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text_queryKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(text_query);

        Button_submit.setText("Submit");
        Button_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_submitActionPerformed(evt);
            }
        });

        jLabel3.setText("Export as report");

        button_report.setText("Export report");
        button_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_reportActionPerformed(evt);
            }
        });

        jLabel4.setText("Nume report:");

        text_name_report.setText("report");

        buttonIOpen.setText("Open Reports");
        buttonIOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIOpenActionPerformed(evt);
            }
        });

        jLabel5.setText("Get Data Base Metadata Information");

        buttonGetMetadata.setText("Get Metadata");
        buttonGetMetadata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGetMetadataActionPerformed(evt);
            }
        });

        button_ViewGraph.setText("View Graph");
        button_ViewGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_ViewGraphActionPerformed(evt);
            }
        });

        jLabel6.setText("Schema:");

        radio_UserSchema.setText("User");
        radio_UserSchema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_UserSchemaActionPerformed(evt);
            }
        });

        radio_allSchema.setText("All");
        radio_allSchema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_allSchemaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Button_submit)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonIOpen))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(progress_report, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_name_report, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_report, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(buttonGetMetadata, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button_ViewGraph, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radio_UserSchema)
                                .addGap(18, 18, 18)
                                .addComponent(radio_allSchema)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Button_submit))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(buttonIOpen))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_name_report, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(button_report)
                    .addComponent(progress_report, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(buttonGetMetadata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_ViewGraph)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_UserSchema)
                    .addComponent(radio_allSchema))
                .addGap(25, 25, 25))
        );

        jSplitPane1.setLeftComponent(jPanel1);
        jSplitPane1.setRightComponent(tabbed_pane_tabs);

        getContentPane().add(jSplitPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int nrtab=1;
    private void Button_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_submitActionPerformed
        if(getDataBaseConection()==null)
        {
            try {
                dataBaseConection=DataBaseConection.getInstance();
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(this,"Eroare la conectare.."+ex.getMessage(),
                                              "Connection error!",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if(!text_query.getText().toLowerCase().contains("select"))
        {
            try {
                dataBaseConection.executeUpdate(text_query.getText());
                JOptionPane.showMessageDialog(this,"Query executed!!",
                        "Done",JOptionPane.INFORMATION_MESSAGE);
                 queryHistory.addQuery(text_query.getText());
                return;
            } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(this,"Error execute query!",
                        "Error",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        if(text_query.getText().length()<=0)
        {
            JOptionPane.showMessageDialog(this,"Insert a valid query!",
                                              "Invalid Query",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try{
        QueryTableModel tableModel=new QueryTableModel(text_query.getText(), getDataBaseConection());
        JTable table=new JTable();
        table.setModel(tableModel);
        JScrollPane  panel=new JScrollPane(table);
        tabbed_pane_tabs.addTab("Query "+nrtab+"  ",null, panel,"Executed query:"+text_query.getText());
        nrtab++;
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(this,"Eroare Query:"+ex.getMessage(),
                                              "Query error",JOptionPane.ERROR_MESSAGE);
        }
        queryHistory.addQuery(text_query.getText());
        text_query.setText("");
    }//GEN-LAST:event_Button_submitActionPerformed

    private void button_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_reportActionPerformed
        
        if(getDataBaseConection()==null)
        {
            try {
                dataBaseConection=DataBaseConection.getInstance();
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(this,"Eroare la conectare.."+ex.getMessage(),
                                              "Connection error!",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if(text_query.getText().length()<=0)
        {
            JOptionPane.showMessageDialog(this,"Insert a valid query!",
                                              "Invalid Query",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
      
            this.progress_report.setVisible(true);
            ReportQueryData reportQueryData=new ReportQueryData(text_query.getText(), 
                  dataBaseConection,ReportQueryData.reportDirectory,text_name_report.getText(),this);
            reportQueryData.setProgressBar(progress_report);
            new Thread(reportQueryData).start();
        
       
   
        queryHistory.addQuery(text_query.getText());
        text_query.setText("");
    }//GEN-LAST:event_button_reportActionPerformed

    private void text_queryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_queryKeyPressed
        
        String curentText=text_query.getText();
        try{
        if(evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
           text_query.setText("");
           text_query.setText(queryHistory.getNextQuery());
          
        }
        if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
           text_query.setText("");
           text_query.setText(queryHistory.getForwardQuery()); 
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            Button_submitActionPerformed(null);
            text_query.setText("");
        }
        }
        catch (EmptyListException ex)
        {
            text_query.setText(curentText);
        }
       
    }//GEN-LAST:event_text_queryKeyPressed

    private void buttonIOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIOpenActionPerformed
        try {
            // TODO add your handling code here:
            Desktop.getDesktop().open(new File(ReportQueryData.reportDirectory));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this,"Cannot access the directory!",
                                              "Error",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_buttonIOpenActionPerformed

    private void buttonGetMetadataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGetMetadataActionPerformed
        
        if(getDataBaseConection()==null)
        {
            try {
                dataBaseConection=DataBaseConection.getInstance();
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(this,"Eroare la conectare.."+ex.getMessage(),
                                              "Connection error!",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        try{
        MetadataTableModel tableModel=new MetadataTableModel(dataBaseConection);
        JTable table=new JTable();
        table.setModel(tableModel);
        JScrollPane  panel=new JScrollPane(table);
        tabbed_pane_tabs.addTab("Metadata "+nrtab+"  ",null, panel,"Metadata of dba");
        nrtab++;
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(this,"Eroare Getting Metadata:"+ex.getMessage(),
                                              "Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonGetMetadataActionPerformed

    private void button_ViewGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_ViewGraphActionPerformed
        if(getDataBaseConection()==null)
        {
            try {
                dataBaseConection=DataBaseConection.getInstance();
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(this,"Eroare la conectare.."+ex.getMessage(),
                                              "Connection error!",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        GraphBuilder gb=new  GraphBuilder(dataBaseConection);
        try {
            gb.build();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Eroare"+ex.getMessage(),
                                              "Sql Eror:"+ex.getMessage(),JOptionPane.ERROR_MESSAGE);
        }
        JScrollPane scrollPane=new JScrollPane(gb.getGraphComponent());
        tabbed_pane_tabs.addTab("Graph  ",null,scrollPane);
    }//GEN-LAST:event_button_ViewGraphActionPerformed

    private void radio_UserSchemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_UserSchemaActionPerformed
        radio_allSchema.setSelected(false);
        DataBaseConection.strSchemaDB=DataBaseConection.DEFAULT_STR_SCHEMA;
        radio_UserSchema.setSelected(true);
    }//GEN-LAST:event_radio_UserSchemaActionPerformed

    private void radio_allSchemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_allSchemaActionPerformed
       radio_UserSchema.setSelected(false);
       DataBaseConection.strSchemaDB=null;
       radio_allSchema.setSelected(true);
    }//GEN-LAST:event_radio_allSchemaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_submit;
    private javax.swing.JButton buttonGetMetadata;
    private javax.swing.JButton buttonIOpen;
    private javax.swing.JButton button_ViewGraph;
    private javax.swing.JButton button_report;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JProgressBar progress_report;
    private javax.swing.JRadioButton radio_UserSchema;
    private javax.swing.JRadioButton radio_allSchema;
    private javax.swing.JTabbedPane tabbed_pane_tabs;
    private javax.swing.JTextField text_name_report;
    private javax.swing.JTextArea text_query;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the dataBaseConection
     */
    public DataBaseConection getDataBaseConection() {
        return dataBaseConection;
    }
}
